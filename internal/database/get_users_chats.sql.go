// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: get_users_chats.sql

package database

import (
	"context"
)

const getUsersChats = `-- name: GetUsersChats :many
SELECT id, chat_name FROM chats WHERE id IN (SELECT chat_id FROM user_chat WHERE user_id = $1)
`

func (q *Queries) GetUsersChats(ctx context.Context, userID int32) ([]Chat, error) {
	rows, err := q.db.QueryContext(ctx, getUsersChats, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Chat
	for rows.Next() {
		var i Chat
		if err := rows.Scan(&i.ID, &i.ChatName); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
